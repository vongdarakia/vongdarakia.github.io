{"version":3,"sources":["webpack:///./src/utils/None.ts","webpack:///./src/pages/index.tsx"],"names":["None","value","query","Home","site","data","fullName","siteMetadata","author","Error"],"mappings":"6FAAA,kCAAO,IAAMA,EAAO,SAChBC,GADgB,OAEqB,MAATA,I,kCCFhC,8FAUaC,EAAQ,aA6BNC,UAjBF,SAAC,GAA8B,QAApBC,EAAoB,EAA5BC,KAAQD,KACdE,EAAWF,SAAH,UAAGA,EAAMG,oBAAT,iBAAG,EAAoBC,cAAvB,aAAG,EAA4BF,SAE7C,GAAIN,YAAKM,GACL,MAAM,IAAIG,MAAM,kDAGpB,OACI,kBAAC,IAAD,KACI,oCAAUH,GACV","file":"component---src-pages-index-tsx-9ca1882dc557ca7772ee.js","sourcesContent":["export const None = <T>(\n    value: T | undefined | null\n): value is undefined | null => value == null;\n","import React from \"react\";\nimport { Layout } from \"../components/Layout\";\nimport { graphql } from \"gatsby\";\nimport { AuthorQuery } from \"../../graphql-types\";\nimport { None } from \"../utils/None\";\n\ninterface Props {\n    readonly data: AuthorQuery;\n}\n\nexport const query = graphql`\n    query Author {\n        site {\n            siteMetadata {\n                author {\n                    fullName\n                }\n            }\n        }\n    }\n`;\n\nconst Home = ({ data: { site } }: Props) => {\n    const fullName = site?.siteMetadata?.author?.fullName;\n\n    if (None(fullName)) {\n        throw new Error(\"author.fullName does not exist in siteMetadata\");\n    }\n\n    return (\n        <Layout>\n            <h1>I am {fullName}</h1>\n            <p>\n                I tell computers to do things that makes life easier for humans\n            </p>\n        </Layout>\n    );\n};\n\nexport default Home;\n"],"sourceRoot":""}